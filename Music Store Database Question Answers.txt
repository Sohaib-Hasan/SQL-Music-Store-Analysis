1. Who is the senior most employee based on job title?
Ans: Mohan Madan
Query:
SELECT * from employee
order by levels DESC
limit 1

2. Which countries have the most Invoices?
Ans: USA 131, Canada 76, Brazil 6, ...
Query:
SELECT billing_country, count(total) from invoice
GROUP by billing_country
order by count(total) desc;

3. What are top 3 values of total invoice?
Ans: 23.75999, 19.8, 19.8

SELECT total from invoice
order by total DESC
limit 3;

4. Which city has the best customers? We would like to throw a promotional Music Festival in the city we made the most money. Write a query that returns one city that has the highest sum of invoice totals. Return both the city name & sum of all invoice totals
Ans: Prague 273.24

Select * from customer
select billing_city, sum(total) as invoice_total from invoice
group by billing_city
order by invoice_total DESC
limit 1;

5. Who is the best customer? The customer who has spent the most money
will be declared the best customer. 
Write a query that returns the person who has spent the most money
Ans: R Madhav 144.54

select c.first_name, c.last_name,sum(i.total) as Total from customer c
join invoice i on i.customer_id = c.customer_id
group by c.first_name, c.last_name
order by sum(i.total) desc;

6. Write query to return the email, first name, last name, & Genre of 
all Rock Music listeners.
Return your list ordered alphabetically by email starting with A

select c.email, c.first_name, c.last_name, g.name
from customer c
join invoice i on i.customer_id = c.customer_id
join invoice_line il on il.invoice_id = i.invoice_id
join track t on t.track_id = il.track_id
join genre g on g.genre_id = t.genre_id
where g.name='Rock'
group by c.email, c.first_name, c.last_name, g.name
order by c.email asc; 

7. Let's invite the artists who have written the most rock music in our dataset. 
Write a query that returns the Artist name and total track count of the top 10 rock bands

select ar.name, count(t.track_id) AS track_count from artist ar
join album al on al.artist_id = ar.artist_id
join track t on t.album_id = al.album_id
join genre g on g.genre_id = t.genre_id
where g.name='Rock'
group by ar.name
order by count(t.track_id) desc
limit 10

8. Return all the track names that have a song length longer than the average song length. 
Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first

select name, milliseconds from track
where milliseconds > (select avg(milliseconds) from track)
order by milliseconds desc

9. Find how much amount spent by each customer on artists? 
Write a query to return customer name, artist name and total spent


select concat(c.first_name,' , ' ,c.last_name) as full_name,a.name, sum(il.unit_price*il.quantity) as total_spent
from customer c
join invoice i on c.customer_id = i.customer_id
join invoice_line il on il.invoice_id = i.invoice_id
join track t on t.track_id = il.track_id
join album al on al.album_id = t.album_id
join artist a on a.artist_id = al.artist_id
group by c.first_name, c.last_name, a.name
order by total_spent desc
 
10. We want to find out the most popular music Genre for each country.
We determine the most popular genre as the genre with the highest amount of purchases. 
Write a query that returns each country along with the top Genre. 
For countries where the maximum number of purchases is shared return all Genres
WITH GenrePopularity AS (
  SELECT 
    i.billing_country,
    g.name AS genre_name,
    COUNT(*) AS genre_count,
    RANK() OVER (PARTITION BY i.billing_country ORDER BY COUNT(*) DESC) AS genre_rank
  FROM invoice i
  JOIN invoice_line il ON i.invoice_id = il.invoice_id
  JOIN track t ON t.track_id = il.track_id
  JOIN genre g ON g.genre_id = t.genre_id
  GROUP BY i.billing_country, g.name
)
SELECT billing_country, genre_name, genre_count
FROM GenrePopularity
WHERE genre_rank = 1
ORDER BY billing_country;

11. Write a query that determines the customer that has spent the most on music for each country. 
Write a query that returns the country along with the top customer and how much they spent. 
For countries where the top amount spent is shared, provide all customers who spent this amount

SELECT 
    c.customer_id,
    CONCAT(c.first_name, ' ', c.last_name) AS full_name,
    c.country,
    SUM(i.total) AS total_spent
FROM customer c
JOIN invoice i ON c.customer_id = i.customer_id
GROUP BY 
    c.customer_id, 
    CONCAT(c.first_name, ' ', c.last_name),
    c.country
HAVING 
    SUM(i.total) = (
        SELECT 
            MAX(total_spent)
        FROM (
            SELECT 
                c2.customer_id,
                SUM(i2.total) AS total_spent
            FROM customer c2
            JOIN invoice i2 ON c2.customer_id = i2.customer_id
            WHERE c2.country = c.country   -- Important!
            GROUP BY c2.customer_id
        ) AS country_totals
    )
ORDER BY country;